#!/bin/bash

# Global S2I variable setup
source `dirname "$0"`/s2i-setup

# support JBoss Tools OpenShift debug environment variables
export JAVA_DEBUG="${JAVA_DEBUG:-${DEBUG}}"
if [ "x${JAVA_DEBUG}" != x ]; then
  export JAVA_DEBUG_PORT="${JAVA_DEBUG_PORT:-${DEBUG_PORT}}"
fi

if [ -f ${RUN_JAVA_DIR}/run-java.sh ]; then

  # set karaf debug options
  debug_opts=$(${RUN_JAVA_DIR}/run-java.sh options --debug)
  if [ ! -z "${debug_opts}" ]; then
    export JAVA_DEBUG_OPTS=${debug_opts}
    export KARAF_DEBUG="true"
  fi

  # set karaf memory limits
  memory_opts=$(${RUN_JAVA_DIR}/run-java.sh options --memory)
  if [ ! -z "${memory_opts}" ]; then
    for opt in ${memory_opts}; do
      if [[ "${opt}" == -Xms* ]]; then
        export JAVA_MIN_MEM="${opt#*-Xms}"
      fi

      if [[ "${opt}" == -Xmx* ]]; then
        export JAVA_MAX_MEM="${opt#*-Xmx}"
      fi
    done
  fi

  # set karaf additional options
  extra_opts=$(${RUN_JAVA_DIR}/run-java.sh options --diagnostics --cpu --jit)
  if [ ! -z "${extra_opts}" ]; then
    export EXTRA_JAVA_OPTS="${extra_opts} ${JAVA_OPTIONS}"
  fi
fi

# set default karaf EXTRA_JAVA_OPTS if required
if [ -z "${EXTRA_JAVA_OPTS}" ]; then
  export EXTRA_JAVA_OPTS="${JAVA_OPTIONS}"
fi

# set Karaf4 console logging level, if not set
if [ -z "${KARAF_LOG_CONSOLE}" ]; then
  export KARAF_LOG_CONSOLE=ALL
fi
export EXTRA_JAVA_OPTS="${EXTRA_JAVA_OPTS} -Dkaraf.log.console=${KARAF_LOG_CONSOLE}"

# set default karaf JAVA_MIN_MEM if required
if [ -z "${JAVA_MIN_MEM}" ]; then
  export JAVA_MIN_MEM=64M
fi

#############################################################################

# check if karaf fileinstall cfg file is present and dynamic deployment supported,
# it is disabled by default and the cfg file is removed if present
if [ -f "${DEPLOYMENTS_DIR}/karaf/etc/org.apache.felix.fileinstall-deploy.cfg" ]; then
  if [ "x${KARAF_DEPLOY}" = "x" ]; then
    rm -f "${DEPLOYMENTS_DIR}/karaf/etc/org.apache.felix.fileinstall-deploy.cfg"
  else
    echo "Dynamic deployments enabled in ${DEPLOYMENTS_DIR}/karaf/deploy"
    mkdir -p ${DEPLOYMENTS_DIR}/karaf/deploy
  fi
fi

# Output from assemble script
echo "Executing ${DEPLOYMENTS_DIR}/karaf/bin/karaf server ..."
export DEPLOYMENTS_DIR
if [ -z "${KARAF_OPTS}" ]; then
  KARAF_OPTS="$(/opt/jolokia/jolokia-opts) $(/opt/prometheus/prometheus-opts)"
  export KARAF_OPTS
fi

# Update the jboss user UID entry in /etc/passwd
sed "/^jboss/s/[^:]*/$(id -u)/3" /etc/passwd > /tmp/passwd
cat /tmp/passwd > /etc/passwd
rm /tmp/passwd

if [ "x${NSS_WRAPPER_PASSWD}" != x ]; then
    sed "/^jboss/s/[^:]*/$(id -u)/3" ${NSS_WRAPPER_PASSWD} > /tmp/passwd
    cat /tmp/passwd > ${NSS_WRAPPER_PASSWD}
    rm /tmp/passwd
fi

# force karaf to exec java process so docker runs a single process with PID 1
export KARAF_EXEC=exec

exec ${DEPLOYMENTS_DIR}/karaf/bin/karaf server

